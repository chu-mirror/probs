@[data@]
#define MAXNODE 100000
#define MAXLEN (25+1)

int bignum[MAXLEN];
int base;
int zeros;
@

@[main@]
{ char r[10]; int ex;
	while (scanf("%s%d", r, &ex) == 2) {
		@{analyze input@}
		@{compute bignum@}
		@{print bignum@}
	}
}
@

@[analyze input@]
{ int i;
	memset(bignum, 0, sizeof(bignum));
	for (i = 0; i < 6; i++) {
		if (r[i] == '.') {
			zeros = 5 - i;
		} else {
			bignum[0] *= 10;
			bignum[0] += r[i] - '0';
		}
	}
	base = bignum[0];
}
@

@[compute bignum@]
zeros *= ex;
while (--ex) {
	@{compute bignum * base@}
}
@

@[compute bignum * base@]
{ int i, c = 0;
	for (i = 0; i < MAXLEN; i++) {
		long long t = bignum[i];
		t *= base;
		t += c;
		c = t / MAXNODE;
		bignum[i] = t % MAXNODE;
	}
}
@

@[print bignum@]
{ char str[200]; int i; int l, r; int len; int skip = 1;
	for (i = MAXLEN-1; i >= 0; i--) {
		sprintf(str+(MAXLEN-i-1)*5, "%05d", bignum[i]);
	}
	len = strlen(str);
	for (l = 0; l < len - zeros; l++) {
		if (skip && str[l] == '0') continue;
		skip = 0;
		printf("%c", str[l]);
	}
	for (r = len-1; r >= len - zeros && str[r] == '0'; r--)
		;
	if (l <= r) {
		printf(".");
		for (i = l; i <= r; i++) printf("%c", str[i]);
	}
	printf("\n");
}
@

@[samples@]
===
95.123 12
0.4321 20
5.1234 15
6.7592  9
98.999 10
1.0100 12
>>>
548815620517731830194541.899025343415715973535967221869852721
.00000005148554641076956121994511276767154838481760200726351203835429763013462401
43992025569.928573701266488041146654993318703707511666295476720493953024
29448126.764121021618164430206909037173276672
90429072743629540498.107596019456651774561044010001
1.126825030131969720661201
@
