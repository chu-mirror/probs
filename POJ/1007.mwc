@[macros@]
#define MAXSIZE 100
#define PRIME_NUMBER 7
@

@[data@]
char dna_strings[MAXSIZE][50+2];
int unsortedness[MAXSIZE];
@

@[functions@]
int less(pos p1, pos p2) {
	return unsortedness[values[p1]] < unsortedness[values[p2]];
}
@
@[prototypes@]
int less(pos, pos);
@

@[macros@]
#define LESS less
@

@[main@]
{ int l, n, i=0;
	scanf("%d%d", &l, &n);
	while (n--) {
		scanf("%s", dna_strings[i]);
		values[size++] = i;
		@{compute unsortedness[i]@}
		i++;
	}
	quicksort(0, size);
	@{print sorted dna_strings@}
}
@

@[compute unsortedness[i]@]
{ int j, k;
	for (j = 0; j < l; j++) {
		for (k = j+1; k < l; k++) {
			if (dna_strings[i][j] > dna_strings[i][k]) unsortedness[i]++;
		}
	}
}
@

@[print sorted dna_strings@]
{ int i;
	for (i = 0; i < size; i++) {
		printf("%s\n", dna_strings[values[i]]);
	}
}
@

@[samples@]
===
10 6
AACATGAAGG
TTTTGGCCAA
TTTGGCCAAA
GATCAGATTT
CCCGGGGGGA
ATCGATGCAT
>>>
CCCGGGGGGA
AACATGAAGG
GATCAGATTT
ATCGATGCAT
TTTTGGCCAA
TTTGGCCAAA
@

